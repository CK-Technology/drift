events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 1G;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=registry:10m rate=5r/s;

    upstream drift_api {
        server drift:5000;
        keepalive 32;
    }

    upstream drift_ui {
        server drift:5001;
        keepalive 32;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name drift.local;

        # SSL configuration
        ssl_certificate     /etc/nginx/ssl/drift.crt;
        ssl_certificate_key /etc/nginx/ssl/drift.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        # Docker Registry v2 API
        location /v2/ {
            limit_req zone=registry burst=20 nodelay;

            proxy_pass http://drift_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts for large uploads
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;

            # Disable request buffering for streaming uploads
            proxy_request_buffering off;
            proxy_buffering off;
        }

        # Bolt API
        location /v1/ {
            limit_req zone=api burst=10 nodelay;

            proxy_pass http://drift_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health checks and metrics
        location ~ ^/(health|readyz|metrics) {
            proxy_pass http://drift_api;
            proxy_set_header Host $host;
            access_log off;
        }

        # Web UI
        location / {
            proxy_pass http://drift_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for hot reload in development
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # MinIO Console (optional)
    server {
        listen 443 ssl http2;
        server_name minio.drift.local;

        ssl_certificate     /etc/nginx/ssl/drift.crt;
        ssl_certificate_key /etc/nginx/ssl/drift.key;

        location / {
            proxy_pass http://minio:9001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Grafana (optional)
    server {
        listen 443 ssl http2;
        server_name grafana.drift.local;

        ssl_certificate     /etc/nginx/ssl/drift.crt;
        ssl_certificate_key /etc/nginx/ssl/drift.key;

        location / {
            proxy_pass http://grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}